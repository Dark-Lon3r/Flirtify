from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from imports import Location, json, asyncio
from locales.translate import translate_start, translate_key
from imports import cache


class Menu:
    def __init__(self):
        self.menu_keyboard = InlineKeyboardMarkup(row_width=2)
        self.menu_keyboard.add(
            InlineKeyboardButton('üèπ', callback_data='create_ancket')
        )

    async def get_menu_keyboard_start(self):
        return self.menu_keyboard


class Floor:
    def __init__(self):
        self.floor_keyboard = InlineKeyboardMarkup(row_width=2)
        self.floor_keyboard.add(
            InlineKeyboardButton('üí™–ú–∞—á–æ', callback_data='Male'),
            InlineKeyboardButton('üë∏–ü—Ä–∏–Ω—Ü–µ—Å–∞', callback_data='Female')
        )

    async def get_menu_keyboard(self):
        return self.floor_keyboard


class Hobbies:
    def __init__(self):
        self.menu_hobbies_choose = InlineKeyboardMarkup(row_width=3, resize_keyboard=True)
        self.menu_hobbies_choose.add(
            InlineKeyboardButton('–ì—Ä—É–ø–∞ IT üëæ', callback_data='category_it'),
            InlineKeyboardButton('–°–ø–æ—Ä—Ç ‚öΩÔ∏è', callback_data='category_sport'),
            InlineKeyboardButton('–ö—É–ª—ñ–Ω–∞—Ä—ñ—è üç≥', callback_data='category_cooking'),
            InlineKeyboardButton('–¢–≤–æ—Ä—á—ñ—Å—Ç—å —Ç–∞ –ú–∏—Å—Ç–µ—Ü—Ç–≤–æ üé®', callback_data='category_creativity'),
        )

        self.menu_hobbies_it = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.menu_hobbies_it.add(
            InlineKeyboardButton('–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, —Ä–æ–∑—Ä–æ–±–∫–∞ –≤–µ–±-—Å–∞–π—Ç—ñ–≤ üíª', callback_data='hobby_–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è'),
            InlineKeyboardButton('–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ–¥–∞—Ç–∫—ñ–≤ üì±', callback_data='hobby_–°—Ç–≤–æ—Ä–µ–Ω–Ω—è_–º–æ–±—ñ–ª—å–Ω–∏—Ö_–¥–æ–¥–∞—Ç–∫—ñ–≤'),
            InlineKeyboardButton("–ö—ñ–±–µ—Ä—Å–ø–æ—Ä—Ç —Ç–∞ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω—ñ —ñ–≥—Ä–∏ üéÆ", callback_data='hobby_–ö—ñ–±–µ—Ä—Å–ø–æ—Ä—Ç'),
            InlineKeyboardButton('3D-–≥—Ä–∞—Ñ—ñ–∫–∞ üñ•Ô∏è', callback_data='hobby_3D-–≥—Ä–∞—Ñ—ñ–∫–∞'),
            InlineKeyboardButton('–†–æ–∑—Ä–æ–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è üõ†Ô∏è', callback_data='hobby_–†–æ–∑—Ä–æ–±–∫–∞-–ü–û'),
            InlineKeyboardButton('–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ—ñ—è —Ç–∞ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∞ üîí', callback_data='hobby_–ö—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∞'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='category_back')
        )

        self.menu_hobbies_sport = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.menu_hobbies_sport.add(
            InlineKeyboardButton('–§—É—Ç–±–æ–ª ‚öΩÔ∏è', callback_data='hobby_–§—É—Ç–±–æ–ª'),
            InlineKeyboardButton('–ë–∞—Å–∫–µ—Ç–±–æ–ª üèÄ', callback_data='hobby_–ë–∞—Å–∫–µ—Ç–±–æ–ª'),
            InlineKeyboardButton("–¢–µ–Ω—ñ—Å üéæ", callback_data='hobby_–¢–µ–Ω—ñ—Å'),
            InlineKeyboardButton('–ë—ñ–≥ üèÉ', callback_data='hobby_–ë—ñ–≥'),
            InlineKeyboardButton('–ë–æ—Ä–æ—Ç—å–±–∞ ü§º', callback_data='hobby_–ë–æ—Ä–æ—Ç—å–±–∞'),
            InlineKeyboardButton('–ë–æ–∫—Å ü•ä', callback_data='hobby_–ë–æ–∫—Å'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='category_back')
        )

        self.menu_hobbies_cooking = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.menu_hobbies_cooking.add(
            InlineKeyboardButton('–í–∏–ø—ñ—á–∫–∞ —Ç–∞ –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å—å–∫–µ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ üç∞', callback_data='hobby_–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å—å–∫–µ_–º–∏—Å—Ç–µ—Ü—Ç–≤–æ'),
            InlineKeyboardButton('–ü—Ä–∏–∫—Ä–∞—Å–∞ —Ç–æ—Ä—Ç—ñ–≤ —Ç–∞ –¥–µ—Å–µ—Ä—Ç—ñ–≤ üéÇ', callback_data='hobby_–ü—Ä–∏–∫—Ä–∞—Å–∞_—Ç–æ—Ä—Ç—ñ–≤'),
            InlineKeyboardButton("–ì–æ—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ –≥—Ä–∏–ª—ñ —Ç–∞ –±–∞—Ä–±–µ–∫—é üçó", callback_data='hobby_–ì–æ—Ç—É–≤–∞–Ω–Ω—è_–Ω–∞_–≥—Ä–∏–ª—ñ'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='category_back')
        )

        self.menu_hobbies_creativity = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.menu_hobbies_creativity.add(
            InlineKeyboardButton('–ú–∞–ª—é–≤–∞–Ω–Ω—è —Ç–∞ –∂–∏–≤–æ–ø–∏—Å üé®', callback_data='hobby_–ú–∞–ª—é–≤–∞–Ω–Ω—è'),
            InlineKeyboardButton('–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è —Ç–∞ –≤—ñ–¥–µ–æ–∑–π–æ–º–∫–∞ üì∑', callback_data='hobby_–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è'),
            InlineKeyboardButton("–ú—É–∑–∏–∫–∞ —Ç–∞ –≥—Ä–∞ –Ω–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö üéµ", callback_data='hobby_–ú—É–∑–∏–∫–∞'),
            InlineKeyboardButton("–í–æ–∫–∞–ª —Ç–∞ —Å–ø—ñ–≤ üé§", callback_data='hobby_–í–æ–∫–∞–ª'),
            InlineKeyboardButton("–¢–∞–Ω—Ü—ñ —Ç–∞ —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ—ñ—è üíÉ", callback_data='hobby_–¢–∞–Ω—Ü—ñ'),
            InlineKeyboardButton("–¢–µ–∞—Ç—Ä —Ç–∞ –∞–∫—Ç–æ—Ä—Å—å–∫–∞ –º–∞–π—Å—Ç–µ—Ä–Ω—ñ—Å—Ç—å üé≠", callback_data='hobby_–¢–µ–∞—Ç—Ä'),
            InlineKeyboardButton("–î–∏–∑–∞–π–Ω —ñ–Ω—Ç–µ—Ä'—î—Ä—É —Ç–∞ –¥–µ–∫–æ—Ä—É–≤–∞–Ω–Ω—è üè†", callback_data='hobby_–î–∏–∑–∞–π–Ω'),
            InlineKeyboardButton("–°–∫—É–ª—å–ø—Ç—É—Ä–∞ —Ç–∞ —Ä—ñ–∑—å–±–ª–µ–Ω–Ω—è –ø–æ –¥–µ—Ä–µ–≤—É ü™µ", callback_data='hobby_–°–∫—É–ª—å–ø—Ç—É—Ä–∞'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='category_back')
        )

    async def get_menu_hobbies_choose(self):
        return self.menu_hobbies_choose

    async def get_menu_hobbies_it(self):
        return self.menu_hobbies_it

    async def get_menu_hobbies_sport(self):
        return self.menu_hobbies_sport

    async def get_menu_hobbies_cooking(self):
        return self.menu_hobbies_cooking

    async def get_menu_hobbies_creativity(self):
        return self.menu_hobbies_creativity


class Ancketa_main:
    def __init__(self, lang):
        self.lang = lang
        self.translations = translate_key(lang)

        self.ancketa_keyboard = InlineKeyboardMarkup(row_width=2, resize_keyboard=True)
        self.ancketa_keyboard.add(
            InlineKeyboardButton(self.translations['my_ancket'][self.lang], callback_data='my_ancketa'),
            InlineKeyboardButton(self.translations['search_ancket'][self.lang], callback_data='start_ancket'),
            InlineKeyboardButton('üõé', callback_data='status_notification'),
            InlineKeyboardButton(self.translations['settings'][self.lang], callback_data='settings'),
            InlineKeyboardButton(self.translations['support'][self.lang], callback_data='donate')
        )

        self.ancketa_choice_judging = InlineKeyboardMarkup(row_width=2, resize_keyboard=True)
        self.ancketa_choice_judging.add(
            InlineKeyboardButton(self.translations['my_ancket'][self.lang], callback_data='my_ancketa'),
            InlineKeyboardButton(self.translations['search_ancket'][self.lang], callback_data='start_ancket'),
            InlineKeyboardButton('üõé', callback_data='status_notification'),
            InlineKeyboardButton(self.translations['settings'][self.lang], callback_data='settings'),
            InlineKeyboardButton('üòà–¢–∞—î–º–Ω–∏—Ü—å —Å—É–¥–¥—ñ–≤', callback_data='judging'),
            InlineKeyboardButton(self.translations['support'][self.lang], callback_data='donate')
        )

        self.ancketa_keyboard_location = ReplyKeyboardMarkup(resize_keyboard=True)
        self.ancketa_keyboard_location.add(
            KeyboardButton('üåê–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è', request_location=True),
        )

        self.ancketa_choice_location = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.ancketa_choice_location.add(
            InlineKeyboardButton('1Ô∏è‚É£', callback_data='btn1'),
            InlineKeyboardButton('2Ô∏è‚É£', callback_data='btn2')
        )

        self.ancketa_choice_location_edit = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.ancketa_choice_location_edit.add(
            InlineKeyboardButton('1Ô∏è‚É£', callback_data='btn1_edit'),
            InlineKeyboardButton('2Ô∏è‚É£', callback_data='btn2_edit')
        )

        self.ancketa_tackle = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.ancketa_tackle.add(
            InlineKeyboardButton('‚ñ∂Ô∏è', callback_data='start_generate'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )

    async def get_menu_keyboard_ancketa(self):
        return self.ancketa_keyboard    

    async def get_menu_judging(self):
        return self.ancketa_choice_judging    

    async def get_menu_keyboard_ancketa_location(self):
        return self.ancketa_keyboard_location

    async def get_menu_choice_location(self):
        return self.ancketa_choice_location

    async def get_menu_choice_location_edit(self):
        return self.ancketa_choice_location_edit

    async def get_menu_ancketa_tackle(self):
        return self.ancketa_tackle


class Settings:
    def __init__(self, lang):
        self.lang = lang
        self.translations = translate_key(lang)
        
        self.settings_keyboard_choice_ancketa = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.settings_keyboard_choice_ancketa.add(
            InlineKeyboardButton(self.translations['search'][self.lang], callback_data='search_settings'),
            InlineKeyboardButton(self.translations['settings_ancketa'][self.lang], callback_data='settings_ancketa'),
            InlineKeyboardButton(self.translations['social'][self.lang], callback_data='social'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )

        self.settings_keyboard_search = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.settings_keyboard_search.add(
            InlineKeyboardButton(self.translations['edit_search_gender'][self.lang], callback_data='edit_search_gender'),
            InlineKeyboardButton(self.translations['edit_search_location'][self.lang], callback_data='edit_search_location'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )

        self.settings_ancketa_social = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.settings_ancketa_social.add(
            InlineKeyboardButton(self.translations['add_instagram'][self.lang], callback_data='add_instagram'),
            InlineKeyboardButton(self.translations['add_tiktok'][self.lang], callback_data='add_tiktok'),
            InlineKeyboardButton(self.translations['add_twitter'][self.lang], callback_data='add_twitter'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )

        self.settings_key_anketa = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.settings_key_anketa.add(
            InlineKeyboardButton(self.translations['edit_location'][self.lang], callback_data='edit_location'),
            InlineKeyboardButton(self.translations['edit_age'][self.lang], callback_data='edit_age'),
            InlineKeyboardButton(self.translations['edit_name'][self.lang], callback_data='edit_name'),
            InlineKeyboardButton(self.translations['edit_photo'][self.lang], callback_data='edit_photo'),
            InlineKeyboardButton(self.translations['edit_description'][self.lang], callback_data='edit_description'),
            InlineKeyboardButton(self.translations['edit_hobbies'][self.lang], callback_data='edit_hobbies'),
            InlineKeyboardButton(self.translations['edit_languages'][self.lang], callback_data='edit_languages'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )

        self.languages_keyboard = InlineKeyboardMarkup(row_width=2, resize_keyboard=True)
        self.languages_keyboard.add(
            InlineKeyboardButton('üá∫üá¶', callback_data='uk_lang'),
            InlineKeyboardButton('ru', callback_data='ru_lang')
        )

        self.cancel_keyboard = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.cancel_keyboard.add(
            InlineKeyboardButton('‚ùå', callback_data='cancel')
        )

        self.back_keyboard = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.back_keyboard.add(
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )


    async def keyboard_choice_ancketa(self):
        return self.settings_keyboard_choice_ancketa

    async def settings_search(self):
        return self.settings_keyboard_search

    async def settings_social(self):
        return self.settings_ancketa_social

    async def get_menu_settings_anketa(self):
        return self.settings_key_anketa

    async def get_menu_keyboard_languages(self):
        return self.languages_keyboard

    async def get_menu_cancel(self):
        return self.cancel_keyboard

    async def get_menu_back(self):
        return self.back_keyboard

@cache
class Pay:
    def __init__(self):
        self.donate_keyboard = InlineKeyboardMarkup(row_width=2, resize_keyboard=True)
        self.donate_keyboard.add(
            InlineKeyboardButton('ü•∞MONOBANK', callback_data="monobank"),
            InlineKeyboardButton('üí∏PayPal', callback_data="paypal"),
            InlineKeyboardButton('üìúPatreon', url="https://patreon.com/Flirtify"),
            InlineKeyboardButton('üìßGmail', callback_data="gmail_send"),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )

        self.paypal_keyboard = InlineKeyboardMarkup(row_width=3, resize_keyboard=True)
        self.paypal_keyboard.add(
            InlineKeyboardButton('1000UAH', callback_data='price_27.16'),
            InlineKeyboardButton('500UAH', callback_data='price_13.58'),
            InlineKeyboardButton('200UAH', callback_data='price_5.43'),
            InlineKeyboardButton('150UAH', callback_data='price_4.07'),
            InlineKeyboardButton('100UAH', callback_data='price_2.72'),
            InlineKeyboardButton('50UAH', callback_data='price_1.36'),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )

        self.monobank_keyboard = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.monobank_keyboard.add(
            InlineKeyboardButton('ü•∞MONOBANK', url="https://send.monobank.ua/jar/9Mp2muNXj1"),
            InlineKeyboardButton('‚¨ÖÔ∏è', callback_data='back')
        )


    async def get_menu_donate(self):
        return self.donate_keyboard


    async def get_menu_paypal(self):
        return self.paypal_keyboard


    async def get_menu_monobank(self):
        return self.monobank_keyboard


class Admin:
    def __init__(self):
        self.admin_keyboard = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.admin_keyboard.add(
            InlineKeyboardButton('üîÑ–û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å–∫—Ä—ã—Ç—ã—Ö', callback_data='clean_shown'),
            InlineKeyboardButton('üì£–†–∞—Å—Å—ã–ª–∫–∞', callback_data='send_users_sms'),
            InlineKeyboardButton('üì•–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–º—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', callback_data='send_sms_user'),
            InlineKeyboardButton('üíî–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', callback_data='ban_user'),
            InlineKeyboardButton('‚ûï–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞', callback_data='add_moderation'),
            InlineKeyboardButton('‚ûñ–£–¥–∞–ª–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞', callback_data='delete_moderation'),
            InlineKeyboardButton('üîí–£–¥–∞–ª–∏—Ç—å –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', callback_data='delete_ban_user'),
            InlineKeyboardButton('‚Ü©Ô∏è–í—ã–π—Ç–∏ —Å –∞–¥–º–∏–Ω–∫–∏', callback_data='exit_admin_menu')
        )

        self.admin_key_cancel = InlineKeyboardMarkup(row_width=1, inline_keyboard=True)
        self.admin_key_cancel.add(
            InlineKeyboardButton('‚ùå', callback_data='cancel_admin')
        )        

        self.moderation_menu = InlineKeyboardMarkup(row_width=1, inline_keyboard=True)
        self.moderation_menu.add(
            InlineKeyboardButton('üìù–°–ø–∏—Å–æ–∫ —Å–∫–∞—Ä–≥', callback_data='list_complaints'),
            InlineKeyboardButton('‚ùå', callback_data='cancel')
        )        

        self.moderation_menu_choice = InlineKeyboardMarkup(row_width=1, inline_keyboard=True)
        self.moderation_menu_choice.add(
            InlineKeyboardButton('üíî–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', callback_data='ban_user'),
            InlineKeyboardButton('üíû–ü—Ä–æ—Å—Ç–∏—Ç—å', callback_data='no_ban_user'),
            InlineKeyboardButton('‚ùå', callback_data='cancel')
        )


    async def get_admin_menu(self):
        return self.admin_keyboard    

    async def get_moderation_menu(self):
        return self.moderation_menu

    async def get_moderation_ban(self):
        return self.moderation_menu_choice

    async def get_admin_menu_cancel(self):
        return self.admin_key_cancel