from loader import bot, CallbackQuery, Message, dp, types

from keyboards.keyboards import Admin, InlineKeyboardButton, InlineKeyboardMarkup
from userdata.func_sql import get_user_info
from handlers.ban.ban import ban_user_func, no_ban_user_func
from imports import aiosqlite

menu_moderation = Admin()

async def list_complaints_db():
    async with aiosqlite.connect("userdata.db") as db:
        query = "SELECT id, name, username, send_complaints_id, send_complaints_username, send_complaints_catigories FROM complaints WHERE value_complaints > 4"
        async with db.execute(query) as cursor:
            results = await cursor.fetchall()
            return results


async def moderation_func(callback_query: CallbackQuery):
	await callback_query.message.edit_text('üåü –í—ñ—Ç–∞—é –≤ –ú–µ–Ω—é –ú–æ–¥–µ—Ä–∞—Ü—ñ—ó! –¢—É—Ç –≤–∏—Ä—ñ—à—É—é—Ç—å—Å—è —Å—É–¥—å–±–∏ –∞–Ω–∫–µ—Ç, –∞ —Ç–∏ - –≥–æ–ª–æ–≤–Ω–∏–π —Å—É–¥–¥—è! üë©‚Äç‚öñÔ∏èü§µ', reply_markup = await menu_moderation.get_moderation_menu())


@dp.callback_query_handler(lambda c: c.data == 'list_complaints')
async def list_complaints_check(callback_query: CallbackQuery):
    list_result = await list_complaints_db()
    user_index = 0  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –∂–∞–ª–æ–±—ã

    if list_result:
        await show_complaint(callback_query.from_user.id, list_result, user_index)
    else:
        await callback_query.message.edit_text("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∂–∞–ª–æ–±–∞–º–∏", reply_markup = await menu_moderation.get_moderation_menu())


async def show_complaint(chat_id, complaints_list, index):
    result = complaints_list[index]
    complaint_id = result[0]
    name = result[1]
    username = result[2]
    send_complaints_id = result[3]
    send_complaints_username = result[4]
    send_complaints_categories = result[5]

    message = "<b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∂–∞–ª–æ–±–∞–º–∏:</b>\n\n"
    user_info = f"ID: {complaint_id}\n"
    user_info += f"–ò–º—è: {name}\n"
    user_info += f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{username}\n\n"
    user_info += f"ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∂–∞–ª–æ–±—ã: {send_complaints_id}\n"
    user_info += f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∂–∞–ª–æ–±—ã: @{send_complaints_username}\n"
    user_info += f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∂–∞–ª–æ–±—ã: {send_complaints_categories}\n\n"
    message += user_info

    moderation_ban = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
    moderation_ban.add(
        InlineKeyboardButton('üíî–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', callback_data=f'ban_{index}_{complaint_id}_{username}'),
        InlineKeyboardButton('üíû–ü—Ä–æ—Å—Ç–∏—Ç—å', callback_data=f'noban_{index}_{complaint_id}_{username}'),
        InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∂–∞–ª–æ–±–∞', callback_data=f'next_{index+1}'),
        InlineKeyboardButton('‚ùå', callback_data='cancel')
    )

    await bot.send_message(chat_id, message, reply_markup=moderation_ban)


@dp.callback_query_handler(lambda c: c.data and c.data.startswith(('ban_', 'noban_', 'next_')))
async def ban_user(callback_query: CallbackQuery):
    data_parts = callback_query.data.split("_")
    action = data_parts[0]
    user_index = int(data_parts[1])

    if action == "ban":
        complaint_id = int(data_parts[2])  # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∂–∞–ª–æ–±—ã –∏–∑ –∫–æ–ª–ª–±—ç–∫-–¥–∞–Ω–Ω—ã—Ö
        username = data_parts[3]  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        await ban_user_func(complaint_id, )
        ban_sms_key = InlineKeyboardMarkup(row_width=1, resize_keyboard=True)
        ban_sms_key.add(
            InlineKeyboardButton('üíî', callback_data='key_ban')
        )
        await bot.send_message(complaint_id, "–ù–∞ –∂–∞–ª—å, –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø–µ—Ä–µ–≤–∏—â–∏–ª–∞ –∫–≤–æ—Ç—É –∂–∞–ª–æ–± —ñ –æ—Ç—Ä–∏–º–∞–ª–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –±–∞–Ω-—Ç—Ä–æ—Ñ–µ–π. –í–∞—à —É—Å–ø—ñ—Ö –≤—Ä–∞–∂–∞—î! üö´üèÜ", reply_markup = ban_sms_key)
        await callback_query.message.edit_text(f"–í—ã –∑–∞–±–∞–Ω–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–Ω–¥–µ–∫—Å–æ–º {user_index}, ID –∂–∞–ª–æ–±—ã {complaint_id}, {username}")

    elif action == "noban":
        complaint_id = int(data_parts[2])  # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∂–∞–ª–æ–±—ã –∏–∑ –∫–æ–ª–ª–±—ç–∫-–¥–∞–Ω–Ω—ã—Ö
        username = data_parts[3]  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        await no_ban_user_func(complaint_id, )
        await bot.send_message(complaint_id, "–£ –Ω–∞—Å —î —á—É–¥–æ–≤–∞ –Ω–æ–≤–∏–Ω–∞: –∂–∞–ª–æ–±–∏ –±—É–ª–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ –Ω–∞ –∫—É—Ä–æ—Ä—Ç, –∞ –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ —Å—Ç–∞—Ç—É—Å '–ü—Ä–æ—â–µ–Ω–∏—Ö'! –í–∏ –Ω–∞–π–∫—Ä–∞—â–µ –ª—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –Ω–∞—à–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É! üå¥‚ùå")
        await callback_query.message.edit_text(f"–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–Ω–¥–µ–∫—Å–æ–º {user_index}, ID –∂–∞–ª–æ–±—ã {complaint_id}, {username}")

    elif action == "next":
        list_result = await list_complaints_db()
        next_index = int(data_parts[1])

        if next_index < len(list_result):
            await show_complaint(callback_query.from_user.id, list_result, next_index)
        else:
            await callback_query.message.edit_text("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ –∂–∞–ª–æ–±", reply_markup = await menu_moderation.get_moderation_menu())
